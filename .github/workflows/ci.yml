name: CI

on:
  push:
    branches: [test]
  pull_request:
    branches: [test]
env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  DB_USER_PASS: ${{ secrets.DB_USER_PASS }}

jobs:
  Jest-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install front dependencies
        run: |
          cd client
          npm ci

      - name: Install back dependencies
        run: |
          cd server
          npm ci

      - name: Create rapports directory if not exists
        run: mkdir -p rapports
        working-directory: server

      - name: Create rapports directory if not exists
        run: mkdir -p rapports
        working-directory: client

      - name: Run back Jest tests
        run: |
          cd server
          npm test
          mv ./test-report.html ./back-jest-report.html

      - name: run back server
        run: |
          cd server
          npm run watch &

      - name: Run front Jest tests
        run: |
          cd client
          npm test
          mv ./test-report.html ./front-jest-report.html

      - name: Upload reports
        uses: actions/upload-artifact@v3
        with:
          name: jest reports
          path: |
            ./client/front-jest-report.html
            ./server/back-jest-report.html

  Eslint-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install front dependencies
        run: |
          npm ci
        working-directory: client

      - name: Install back dependencies
        run: |
          npm ci
        working-directory: server

      - name: Where am i
        run: |
          pwd
          ls

      - name: Where am i server
        run: |
          pwd
          ls -la
        working-directory: server

      - name: Where am i client
        run: |
          pwd
          ls -la
        working-directory: client

      - name: Create eslint directory if not exists
        run: mkdir -p eslint
        working-directory: server

      - name: Create eslint directory if not exists
        run: mkdir -p eslint
        working-directory: client

      - name: Run front Eslint test
        run: |
          npm run lint || true
        working-directory: client

      - name: Run back Eslint test
        run: |
          npm run lint || true
        working-directory: server

      # - name: Run back Eslint test
      #   uses: sibiraj-s/action-eslint@v3
      #   with:
      #     eslint-args: "--ignore-path=.gitignore --quiet --output-file=/home/runner/work/khagu-devops/khagu-devops/server/eslint/back_Eslint.txt"
      #     extensions: "js,jsx,ts,tsx"
      #     annotations: true
      #     working-directory: server

      # - name: Run front Eslint test
      #   uses: sibiraj-s/action-eslint@v3
      #   with:
      #     eslint-args: "--ignore-path=.gitignore --quiet --output-file=/home/runner/work/khagu-devops/khagu-devops/client/eslint/front_Eslint.txt"
      #     extensions: "js,jsx,ts,tsx"
      #     annotations: true
      #     working-directory: client

      # - name: check report
      #   run: |
      #     cat /home/runner/work/khagu-devops/khagu-devops/client/eslint/front_Eslint.txt
      #     cat /home/runner/work/khagu-devops/khagu-devops/server/eslint/back_Eslint.txt

      - name: front report
        uses: actions/upload-artifact@v3
        with:
          name: eslint front report
          path: |
            eslint-report.html

      - name: back report
        uses: actions/upload-artifact@v3
        with:
          name: eslint back report
          path: |
            eslint-report.html

  build-and-push:
    needs: [Jest-tests, Eslint-test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install front dependencies
        run: |
          cd client
          npm ci

      - name: Install back dependencies
        run: |
          cd server
          npm ci

      - name: Build front
        if: ${{ success() }}
        run: |
          cd client
          npm run build

      - name: Build Docker images and push to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          docker build ./client -t khagu/khagu-dev-front:latest
          docker push khagu/khagu-dev-front:latest
          docker build ./server -t khagu/khagu-dev-back:latest
          docker push khagu/khagu-dev-back:latest
